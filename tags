!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AGENT_TYPE_LINUX_NVIDIA	./src/cmd_agent.h	12;"	d
AGENT_TYPE_UX	./src/cmd_agent.h	13;"	d
BREAK	./src/cmd_agent.h	10;"	d
CFLAGS	./src/Makefile	/^CFLAGS =  $(DEFINES) $(INCLUDES) $(EXTRA_CFLAGS) -g -Wstrict-prototypes -Wall -O2 -pthread $/;"	m
DEBUG	./src/cmd_agent.h	9;"	d
EPOLL_EVENT_SIZE	./src/main.h	25;"	d
EPOLL_SIZE	./src/main.h	24;"	d
INCLUDES	./src/Makefile	/^INCLUDES = -I. -I$(JSON_INCLUDE_PATH)$/;"	m
JSON_INCLUDE_PATH	./src/Makefile	/^JSON_INCLUDE_PATH=$(PATH_SRC)\/lib\/json\/include\/json-c$/;"	m
JSON_LIB_PATH	./src/Makefile	/^JSON_LIB_PATH=$(PATH_SRC)\/lib\/json\/lib\/libjson-c.a$/;"	m
LIB	./src/Makefile	/^LIB = $(JSON_LIB_PATH)$/;"	m
MAKE	./src/Makefile	/^MAKE=make$/;"	m
OBJ	./src/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
PORT	./src/main.h	22;"	d
PROGRAM	./src/Makefile	/^PROGRAM = ..\/cmd_agent$/;"	m
SERVER_HELLO_PACKET_SIZE	./src/tcp.h	7;"	d
SRC	./src/Makefile	/^SRC = main.c parse.c tcp.c session.c$/;"	m
_CMD_AGENT_H_	./src/cmd_agent.h	2;"	d
_PARSE_H_	./src/parse.h	2;"	d
_SESSION_H_	./src/session.h	2;"	d
_TCP_H_	./src/main.h	2;"	d
_TCP_H_	./src/tcp.h	2;"	d
do_accept	./src/main.c	/^int do_accept (int efd, int sfd) {$/;"	f
do_add_fd	./src/main.c	/^int do_add_fd(int efd, int cfd) {$/;"	f
do_del_fd	./src/main.c	/^int do_del_fd(int efd, int cfd) {$/;"	f
do_modify_fd	./src/main.c	/^int do_modify_fd(int efd, int cfd) {$/;"	f
do_use_fd	./src/session.c	/^int do_use_fd (int efd, struct epoll_event ev) {$/;"	f
init_acceptsock	./src/main.c	/^int init_acceptsock (unsigned short port) { $/;"	f
init_epoll	./src/main.c	/^int init_epoll (int eventsize) { $/;"	f
main	./src/main.c	/^int main (int argc, char **argv) {$/;"	f
main	./src/temp/main.c	/^int main(void){$/;"	f
parse_json_to_string	./src/parse.c	/^char* parse_json_to_string(json_object *json_obj) {$/;"	f
setnonblock	./src/main.c	/^int setnonblock (int sock) {$/;"	f
setreuseaddr	./src/main.c	/^int setreuseaddr(int sock) {$/;"	f
settcpnodelay	./src/main.c	/^int settcpnodelay (int sock) {$/;"	f
tcp_hello	./src/tcp.c	/^char* tcp_hello(void) {$/;"	f
